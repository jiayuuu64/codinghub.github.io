{
  "title": "Python",
  "description": "Learn Python from the ground up, covering fundamentals, control flow, functions, and more.",
  "sections": [
    {
      "title": "Python Basics",
      "description": "Start with variables, data types, and basic operations.",
      "lessons": [
        {
          "title": "Creating Variables",
          "steps": [
            {
              "type": "text-video",
              "text": "In Python, variables are created by assigning values with the '=' sign.",
              "content": "https://www.youtube.com/embed/_uQrJ0TkZlc"
            },
            {
              "type": "text-code",
              "text": "This line creates a variable named 'x' and assigns it the integer value 10. Variables are like containers for data.",
              "language": "python",
              "content": "x = 10"
            },
            {
              "type": "quiz",
              "question": "Which line correctly assigns a value to a variable?",
              "options": ["10 = x", "x == 10", "x = 10"],
              "answer": "x = 10",
              "explanation": "The '=' operator assigns values in Python. '10 = x' is invalid, and 'x == 10' checks equality, not assignment."
            }
          ]
        },
        {
          "title": "Data Types",
          "steps": [
            {
              "type": "text-video",
              "text": "Python has several data types such as int, float, str, and bool.",
              "content": "https://www.youtube.com/embed/khKv-8q7YmY"
            },
            {
              "type": "text-code",
              "text": "Here we define variables of different types: an integer, a floating-point number, a string (text), and a boolean value (True/False). These types determine what kind of data each variable holds.",
              "language": "python",
              "content": "a = 5  # int\nb = 3.14  # float\nc = 'Hello'  # string\nd = True  # boolean"
            },
            {
              "type": "quiz",
              "question": "What is the data type of 3.14?",
              "options": ["int", "float", "str", "bool"],
              "answer": "float",
              "explanation": "3.14 is a decimal number, which is represented as a float (floating-point number) in Python."
            }
          ]
        },
        {
          "title": "Basic Operations",
          "steps": [
            {
              "type": "text-video",
              "text": "Learn arithmetic operations in Python like addition, subtraction, multiplication, and division.",
              "content": "https://www.youtube.com/embed/kqtD5dpn9C8"
            },
            {
              "type": "text-code",
              "text": "This example adds 10 and 5, assigns the result to 'x', and prints the output. Python uses standard arithmetic operators like +, -, *, and /.",
              "language": "python",
              "content": "x = 10 + 5\nprint(x)  # Output: 15"
            },
            {
              "type": "quiz",
              "question": "What will be the output of `10 - 2`?",
              "options": ["8", "12", "102", "Error"],
              "answer": "8",
              "explanation": "`10 - 2` subtracts 2 from 10, resulting in 8."
            }
          ]
        }
      ]
    },
    {
      "title": "Control Flow",
      "description": "Learn how to control the flow of your Python programs with conditions and loops.",
      "lessons": [
        {
          "title": "If Statements",
          "steps": [
            {
              "type": "text-video",
              "text": "Use if, elif, and else to execute code based on conditions.",
              "content": "https://www.youtube.com/embed/Z3b_JqJUe8o"
            },
            {
              "type": "text-code",
              "text": "This code checks if 'x' is greater than 5. If true, it prints one message; otherwise, it prints another. Conditional statements let your programs make decisions.",
              "language": "python",
              "content": "x = 10\nif x > 5:\n    print('x is greater than 5')\nelse:\n    print('x is 5 or less')"
            },
            {
              "type": "quiz",
              "question": "What will be printed if x=10?",
              "options": ["x is greater than 5", "x is 5 or less", "Error", "Nothing"],
              "answer": "x is greater than 5",
              "explanation": "Since 10 > 5, the condition is true and the 'if' block runs, printing 'x is greater than 5'."
            }
          ]
        },
        {
          "title": "Loops",
          "steps": [
            {
              "type": "text-video",
              "text": "For loops and while loops help you repeat code multiple times.",
              "content": "https://www.youtube.com/embed/6iF8Xb7Z3wQ"
            },
            {
              "type": "text-code",
              "text": "This for loop repeats the print statement for each number from 0 up to (but not including) 3. Loops let you run code multiple times efficiently.",
              "language": "python",
              "content": "for i in range(3):\n    print(i)"
            },
            {
              "type": "quiz",
              "question": "What will be printed by this loop?",
              "options": ["0 1 2", "1 2 3", "0 1 2 3", "Error"],
              "answer": "0 1 2",
              "explanation": "`range(3)` generates numbers 0, 1, and 2. The loop prints each of them on a new line."
            }
          ]
        }
      ]
    },
    {
      "title": "Functions",
      "description": "Define reusable blocks of code with functions.",
      "lessons": [
        {
          "title": "Defining Functions",
          "steps": [
            {
              "type": "text-video",
              "text": "Functions let you encapsulate code for reuse.",
              "content": "https://www.youtube.com/embed/NSbOtYzIQI0"
            },
            {
              "type": "text-code",
              "text": "This defines a function called 'greet' that takes a 'name' parameter and prints a greeting. You call the function by name and provide arguments.",
              "language": "python",
              "content": "def greet(name):\n    print(f'Hello, {name}!')\n\ngreet('Alice')"
            },
            {
              "type": "quiz",
              "question": "How do you define a function in Python?",
              "options": ["function greet()", "def greet()", "func greet()", "define greet()"],
              "answer": "def greet()",
              "explanation": "Python uses the `def` keyword to define functions. `def greet():` is correct syntax."
            }
          ]
        }
      ]
    },
    {
      "title": "Summary Quiz",
      "description": "Test your knowledge from all previous lessons.",
      "lessons": [
        {
          "title": "Final Quiz",
          "steps": [
            {
              "type": "quiz",
              "question": "Which symbol is used to assign a value to a variable?",
              "options": ["=", "==", ":", "+="],
              "answer": "=",
              "explanation": "`=` is the assignment operator. Others have different meanings."
            },
            {
              "type": "quiz",
              "question": "What is the output of `print(2 + 3 * 4)`?",
              "options": ["20", "14", "24", "None"],
              "answer": "14",
              "explanation": "Multiplication has higher precedence: 3 * 4 = 12, then 2 + 12 = 14."
            },
            {
              "type": "quiz",
              "question": "Which keyword starts a function definition?",
              "options": ["function", "def", "func", "define"],
              "answer": "def",
              "explanation": "In Python, function definitions begin with `def`."
            },
            {
              "type": "quiz",
              "question": "What does the `if` statement do?",
              "options": [
                "Loops over items",
                "Executes code conditionally",
                "Defines a function",
                "Creates a variable"
              ],
              "answer": "Executes code conditionally",
              "explanation": "`if` checks a condition and runs a code block if it's true."
            },
            {
              "type": "quiz",
              "question": "Which of these is a valid variable name in Python?",
              "options": ["first-name", "1stName", "_first_name", "first name"],
              "answer": "_first_name",
              "explanation": "Valid variable names can't start with a number or contain spaces/dashes. `_first_name` is valid."
            },
            {
              "type": "quiz",
              "question": "What will be the output of this code?\n\nprint(type(3.14))",
              "options": ["<class 'int'>", "<class 'float'>", "<class 'str'>", "<class 'bool'>"],
              "answer": "<class 'float'>",
              "explanation": "`3.14` is a float, so its type is `<class 'float'>`."
            },
            {
              "type": "quiz",
              "question": "Which operator is used for exponentiation in Python?",
              "options": ["^", "**", "%", "//"],
              "answer": "**",
              "explanation": "`**` is used for exponentiation, like `2 ** 3 = 8`."
            },
            {
              "type": "quiz",
              "question": "What keyword is used to start a conditional statement in Python?",
              "options": ["if", "for", "while", "def"],
              "answer": "if",
              "explanation": "`if` starts a conditional block."
            },
            {
              "type": "quiz",
              "question": "How do you define a function that takes no parameters?",
              "options": ["def func:", "def func()", "function func()", "def func(void)"],
              "answer": "def func()",
              "explanation": "`def func()` is correct. Python functions can omit parameters entirely."
            },
            {
              "type": "quiz",
              "question": "What will this loop output?\n\nfor i in range(2):\n    print(i)",
              "options": ["0 1 2", "1 2", "0 1", "1 2 3"],
              "answer": "0 1",
              "explanation": "`range(2)` gives 0 and 1. So `print(i)` runs for those two values."
            }
          ]
        }
      ]
    }
  ]
}